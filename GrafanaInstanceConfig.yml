apiVersion: apps/v1
kind: Deployment
metadata:
  name: Grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: Grafana
  template:
    metadata:
      name: Grafana
      labels:
        app: Grafana
    spec:
      containers:
        - name: Grafana
          image: grafana/grafana:latest
          ports:
            - name: grafana
              containerPort: 3000
          volumeMounts:
          volumeMounts:
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasources
              readOnly: false
            - mountPath: /var/lib/grafana/dashboards
              name: grafana-dashboard
              readOnly: false
            - mountPath: /etc/grafana/provisioning/dashboards
              name: grafana-dashboard-definition

      volumes:
        - name: grafana-datasources
          configMap:
            defaultMode: 420
            name: grafana-datasources
        - name: grafana-dashboard
          configMap:
            defaultMode: 420
            name: grafana-dashboard
        - name: grafana-dashboard-definition
          configMap:
            defaultMode: 420
            name: grafana-dashboardsdef
      securityContext:
        fsGroup: 472
        runAsUser: 472
        supplementalGroups:
          - 0
---
apiVersion: v1
kind: Service
metadata:
  name: Grafana
  namespace: monitoring
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port:   '3000'
spec:
  selector:
    app: Grafana
  type: NodePort
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 32000
---
apiVersion: v1
kind: Service
metadata:
  namespace: monitoring
  name: Grafanaui
spec:
  type: LoadBalancer
  ports:
    - name: "ui"
      port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app: Grafana